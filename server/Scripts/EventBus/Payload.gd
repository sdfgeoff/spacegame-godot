class_name Payload
# WARNING: AutoGenerated File. Do Not Modify
# Instead modify the files inside server/Scripts/EventBus/Messages
	
const All = preload('res://Scripts/EventBus/Messages/All.gd')
const GNC_State = preload('res://Scripts/EventBus/Messages/GNC_State.gd')
const GNC_Targets = preload('res://Scripts/EventBus/Messages/GNC_Targets.gd')
const Ping = preload('res://Scripts/EventBus/Messages/Ping.gd')
const Pong = preload('res://Scripts/EventBus/Messages/Pong.gd')
const Subscriptions = preload('res://Scripts/EventBus/Messages/Subscriptions.gd')

enum Topic {
	ALL,
	GNC_STATE,
	GNC_TARGETS,
	PING,
	PONG,
	SUBSCRIPTIONS,
}

const TOPIC_TO_STRING = {
	Topic.ALL: "All",
	Topic.GNC_STATE: "GNC_State",
	Topic.GNC_TARGETS: "GNC_Targets",
	Topic.PING: "Ping",
	Topic.PONG: "Pong",
	Topic.SUBSCRIPTIONS: "Subscriptions",
}

const STRING_TO_TOPIC = {
	"All": Topic.ALL,
	"GNC_State": Topic.GNC_STATE,
	"GNC_Targets": Topic.GNC_TARGETS,
	"Ping": Topic.PING,
	"Pong": Topic.PONG,
	"Subscriptions": Topic.SUBSCRIPTIONS,
}

static func create_all():
	var message = All.new()

	return message

static func create_gnc_state(time_sent: float, pos_x: float, pos_y: float, pos_z: float, ang_x: float, ang_y: float, ang_z: float):
	var message = GNC_State.new()
	message.time_sent = time_sent
	message.pos_x = pos_x
	message.pos_y = pos_y
	message.pos_z = pos_z
	message.ang_x = ang_x
	message.ang_y = ang_y
	message.ang_z = ang_z
	return message

static func create_gnc_targets(linear_x: float, linear_y: float, linear_z: float, angular_x: float, angular_y: float, angular_z: float):
	var message = GNC_Targets.new()
	message.linear_x = linear_x
	message.linear_y = linear_y
	message.linear_z = linear_z
	message.angular_x = angular_x
	message.angular_y = angular_y
	message.angular_z = angular_z
	return message

static func create_ping(time_ping_sent: int):
	var message = Ping.new()
	message.time_ping_sent = time_ping_sent
	return message

static func create_pong(time_ping_sent: int, time_server_send: int):
	var message = Pong.new()
	message.time_ping_sent = time_ping_sent
	message.time_server_send = time_server_send
	return message

static func create_subscriptions(to_topics: Array):
	var message = Subscriptions.new()
	message.to_topics = to_topics
	return message

const TOPIC_TO_TYPE = {
	Topic.ALL: All,
	Topic.GNC_STATE: GNC_State,
	Topic.GNC_TARGETS: GNC_Targets,
	Topic.PING: Ping,
	Topic.PONG: Pong,
	Topic.SUBSCRIPTIONS: Subscriptions,
}
